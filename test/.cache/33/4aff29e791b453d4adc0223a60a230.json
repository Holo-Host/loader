{"id":"../web/hClient/node_modules/core-js/modules/_to-primitive.js","dependencies":[{"name":"/home/willem/repos/loader/web/hClient/node_modules/core-js/package.json","includedInParent":true,"mtime":1550712118955},{"name":"./_is-object","loc":{"line":2,"column":23},"parent":"/home/willem/repos/loader/web/hClient/node_modules/core-js/modules/_to-primitive.js","resolved":"/home/willem/repos/loader/web/hClient/node_modules/core-js/modules/_is-object.js"}],"generated":{"js":"// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","map":{"mappings":[{"source":"../web/hClient/node_modules/core-js/modules/_to-primitive.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../web/hClient/node_modules/core-js/modules/_to-primitive.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../web/hClient/node_modules/core-js/modules/_to-primitive.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../web/hClient/node_modules/core-js/modules/_to-primitive.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../web/hClient/node_modules/core-js/modules/_to-primitive.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../web/hClient/node_modules/core-js/modules/_to-primitive.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../web/hClient/node_modules/core-js/modules/_to-primitive.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../web/hClient/node_modules/core-js/modules/_to-primitive.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../web/hClient/node_modules/core-js/modules/_to-primitive.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../web/hClient/node_modules/core-js/modules/_to-primitive.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../web/hClient/node_modules/core-js/modules/_to-primitive.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../web/hClient/node_modules/core-js/modules/_to-primitive.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../web/hClient/node_modules/core-js/modules/_to-primitive.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}}],"sources":{"../web/hClient/node_modules/core-js/modules/_to-primitive.js":"// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n"},"lineCount":13}},"hash":"ecc4cce48b50f35a9be0aa72b74494fc","cacheData":{"env":{}}}