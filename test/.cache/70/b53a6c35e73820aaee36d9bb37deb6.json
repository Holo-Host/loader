{"id":"../web/hClient/node_modules/core-js/modules/_ctx.js","dependencies":[{"name":"/home/willem/repos/loader/web/hClient/node_modules/core-js/package.json","includedInParent":true,"mtime":1550712118955},{"name":"./_a-function","loc":{"line":2,"column":24},"parent":"/home/willem/repos/loader/web/hClient/node_modules/core-js/modules/_ctx.js","resolved":"/home/willem/repos/loader/web/hClient/node_modules/core-js/modules/_a-function.js"}],"generated":{"js":"// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","map":{"mappings":[{"source":"../web/hClient/node_modules/core-js/modules/_ctx.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../web/hClient/node_modules/core-js/modules/_ctx.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../web/hClient/node_modules/core-js/modules/_ctx.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../web/hClient/node_modules/core-js/modules/_ctx.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../web/hClient/node_modules/core-js/modules/_ctx.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../web/hClient/node_modules/core-js/modules/_ctx.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../web/hClient/node_modules/core-js/modules/_ctx.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../web/hClient/node_modules/core-js/modules/_ctx.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../web/hClient/node_modules/core-js/modules/_ctx.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../web/hClient/node_modules/core-js/modules/_ctx.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../web/hClient/node_modules/core-js/modules/_ctx.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../web/hClient/node_modules/core-js/modules/_ctx.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../web/hClient/node_modules/core-js/modules/_ctx.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../web/hClient/node_modules/core-js/modules/_ctx.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../web/hClient/node_modules/core-js/modules/_ctx.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../web/hClient/node_modules/core-js/modules/_ctx.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../web/hClient/node_modules/core-js/modules/_ctx.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../web/hClient/node_modules/core-js/modules/_ctx.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../web/hClient/node_modules/core-js/modules/_ctx.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../web/hClient/node_modules/core-js/modules/_ctx.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../web/hClient/node_modules/core-js/modules/_ctx.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}}],"sources":{"../web/hClient/node_modules/core-js/modules/_ctx.js":"// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n"},"lineCount":21}},"hash":"948418d7bb7f747efdad4608674e9d2a","cacheData":{"env":{}}}